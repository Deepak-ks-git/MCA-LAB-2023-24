# -*- coding: utf-8 -*-
"""LAB7naviebayesiris.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1e3CbY847ean6ySaVicAzWSKdQmf915EW
"""

# Import necessary libraries
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score

# Load the Iris dataset
iris = load_iris()
X, y = iris.data, iris.target

iris

# Split the dataset into a training set and a test set
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Naive Bayes classifier
clf = GaussianNB()

# Fit the classifier to the training data
clf.fit(X_train, y_train)

# Make predictions on the test data
y_pred = clf.predict(X_test)

# Calculate the accuracy of the classifier
accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy * 100:.2f}%')

#get inputs from user
sepal_length=float(input("enter sepal length :"))
sepal_width=float(input("enter sepal width :"))
petal_length=float(input("enter petal length :"))
petal_width=float(input("enter petal width :"))

#make prediction
new_instance=[[sepal_length,sepal_width,petal_length,petal_width]]
predicted_class=clf.predict(new_instance)


class_name=class_names[predicted_class[0]]

print(f"the predicted class is :{class_name}")
#4.6, 3.1, 1.5, 0.2