# -*- coding: utf-8 -*-
"""LAB3knniris.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RKzVcrIAqfy1MDDZL-82xaKeblxBxktx
"""

import numpy as np
import pandas as pd
from sklearn import datasets
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score



# Load the Iris dataset
iris = datasets.load_iris()
data = pd.DataFrame(data=iris.data, columns=iris.feature_names)
target = iris.target

data

target

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(data, target, test_size=0.2, random_state=42)

# Ask the user for the value of 'k'
k = int(input("Enter the value of 'k' for the K-Nearest Neighbors algorithm: "))
# Initialize the kNN classifier with a specific k value (e.g., k=3)
knn_classifier = KNeighborsClassifier(n_neighbors=k)

# Train the classifier on the training data
knn_classifier.fit(X_train, y_train)



# Make predictions on the test data
y_pred = knn_classifier.predict(X_test)

# Calculate the accuracy of the model
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy of k-NN with k={k}: {accuracy:.2f}")

# take user input to create a new sample for prediction(EG.  5.1, 3.5, 1.4, 0.2)
user_input = input("Enter four feature values separated by commas (sepal length, sepal width, petal length, petal width): ")
user_values = [float(x) for x in user_input.split(',')]
new_sample = np.array([user_values])

# Predict the label for the new instance
predicted_label = knn_classifier.predict(new_sample)
# Map the predicted label to class name
class_name = iris.target_names[predicted_label][0]
# Print the result
print()
print(f"The predicted class for the new instance is: {class_name}")
print()